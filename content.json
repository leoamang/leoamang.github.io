{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://example.com","root":"/"},"pages":[],"posts":[{"title":"hexo+github(二)","slug":"hexo-github-二","date":"2022-04-09T13:50:59.000Z","updated":"2022-04-09T14:27:49.567Z","comments":true,"path":"2022/04/09/hexo-github-二/","link":"","permalink":"http://example.com/2022/04/09/hexo-github-%E4%BA%8C/","excerpt":"","text":"一 选择hexo自带的的图片插件 a:下载插件 hexo-asset-image npm install hexo-asset-image –save b：如果想添加图片到已经存在的md文件，那么这个时候直接自己创建一个与md文件同名的文件夹存放图片； ​ 如果这个时候还没有创建md文件，可以选择hexo n 新建一个md文件，这个时候可以看到自动创建了一个与md同名的文件夹。 c：更改congif.yml文件里面的post_asset_folder: false更改为post_asset_folder: true。 d：更改node.module&#x2F;hexo-asset-image下面的配置文件index.js为： 12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667686970&#x27;use strict&#x27;;var cheerio = require(&#x27;cheerio&#x27;);// http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-stringfunction getPosition(str, m, i) &#123; return str.split(m, i).join(m).length;&#125;hexo.extend.filter.register(&#x27;after_post_render&#x27;, function(data)&#123; var config = hexo.config; if(config.post_asset_folder)&#123; var link = data.permalink; var beginPos = getPosition(link, &#x27;/&#x27;, 3) + 1; var appendLink = &#x27;&#x27;; // In hexo 3.1.1, the permalink of &quot;about&quot; page is like &quot;.../about/index.html&quot;. // if not with index.html endpos = link.lastIndexOf(&#x27;.&#x27;) + 1 support hexo-abbrlink if(/.*\\/index\\.html$/.test(link)) &#123; // when permalink is end with index.html, for example 2019/02/20/xxtitle/index.html // image in xxtitle/ will go to xxtitle/index/ appendLink = &#x27;index/&#x27;; var endPos = link.lastIndexOf(&#x27;.&#x27;); &#125; else &#123; var endPos = link.lastIndexOf(&#x27;/&#x27;); &#125; link = link.substring(beginPos, endPos) + &#x27;/&#x27; + appendLink; var toprocess = [&#x27;excerpt&#x27;, &#x27;more&#x27;, &#x27;content&#x27;]; for(var i = 0; i &lt; toprocess.length; i++)&#123; var key = toprocess[i]; var $ = cheerio.load(data[key], &#123; ignoreWhitespace: false, xmlMode: false, lowerCaseTags: false, decodeEntities: false &#125;); $(&#x27;img&#x27;).each(function()&#123; if ($(this).attr(&#x27;src&#x27;))&#123; // For windows style path, we replace &#x27;\\&#x27; to &#x27;/&#x27;. var src = $(this).attr(&#x27;src&#x27;).replace(&#x27;\\\\&#x27;, &#x27;/&#x27;); if(!(/http[s]*.*|\\/\\/.*/.test(src) || /^\\s+\\//.test(src) || /^\\s*\\/uploads|images\\//.test(src))) &#123; // For &quot;about&quot; page, the first part of &quot;src&quot; can&#x27;t be removed. // In addition, to support multi-level local directory. var linkArray = link.split(&#x27;/&#x27;).filter(function(elem)&#123; return elem != &#x27;&#x27;; &#125;); var srcArray = src.split(&#x27;/&#x27;).filter(function(elem)&#123; return elem != &#x27;&#x27; &amp;&amp; elem != &#x27;.&#x27;; &#125;); if(srcArray.length &gt; 1) srcArray.shift(); src = srcArray.join(&#x27;/&#x27;); $(this).attr(&#x27;src&#x27;, config.root + link + src); console.info&amp;&amp;console.info(&quot;update link as:--&gt;&quot;+config.root + link + src); &#125; &#125;else&#123; console.info&amp;&amp;console.info(&quot;no src attr, skipped...&quot;); console.info&amp;&amp;console.info($(this)); &#125; &#125;); data[key] = $.html(); &#125; &#125;&#125;); tips：在本人尝试时为成功，老师指导后知道，是因为源程序正则表达式有问题，在博客对图片进行检查时发现映射的地址为.&#x2F;com，这个地址并不是本地的地址，更改正则表达式后发现可以找到本地图片的地址。 可以在index.js中加入console.info语句打印变量，查看问题！！！！ f：重启hexo服务器 hexo s 如果重启后仍然看不到图片，可以按顺序运行以下代码： hexo clean hexo g hexo d hexo s","categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]},{"title":"hexo+github","slug":"hexo-github-一","date":"2022-04-08T13:57:23.000Z","updated":"2022-04-09T14:11:47.237Z","comments":true,"path":"2022/04/08/hexo-github-一/","link":"","permalink":"http://example.com/2022/04/08/hexo-github-%E4%B8%80/","excerpt":"","text":"hexo和github连接免费搭建个人博客网站(小白)一 先下载node和git，这个我都已经下载了，所以这一步详细步骤省略，等之后在笔记本上尝试时再添加。下载完成后可以通过 -v &#x2F;-version查看node、npm和git版本确定是否下载成功 二 注册github账号，并创建仓库，设置ssh连接 （1）点击头像，选择new reposity，新建一个名为：用户名.github.io的仓库，比如说我的用户名是leoamang，那么我需要建立一个名为leoamang.github.io的仓库。 （2）配置SSH key：使用ssh key解决本地和服务器的连接问题。 a：在桌面上（我做的时候并没有在桌面上，就是任意的文件夹，不知道是否只有桌面才成功，待验证）使用git base here进行命令行，输入 git config –global user.name “username” (例如：git config –global user.name “leoamang”)， 输入git config –global user.email “youremail” (例如git config –global user.email “***@qq.com”）。 b：创建SSH，输入后一路回车就行 ssh-keygen -t rsa -C “youremail”（C大写） ​ C：在路径C:\\Users\\DELL.ssh的id_rsa.pub可以看到生成的ssh密钥。打开并复制。 （3）在github上设置密钥：点击头像→settings→找到ssh and GPG keys→new ssh key→粘贴复制的ssh密钥，随意起个名字，并保存。检查设置是否成功 ssh -T &#x67;&#105;&#x74;&#x40;&#103;&#105;&#116;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#109; 若出现Hi username！ You’ve successfully authenticated, but GitHub does not provide shell access. 三 下载hexo 在自己想要的位置创建一个文件夹，名叫hexo，在这个文件夹下打开git base here 使用npm全局安装hexo框架和deployer： npm install -g hexo-cli npm install hexo-deployer-git –save 若安装速度慢，或者不成功，更换npm镜像源（我第一次没成功，更换镜像源后成功） npm config set registry https://registry.npm.taobao.org。 安装完成后，初始化博客，会在hexo文件夹下面创建一个blog文件，或者直接hexo init不会创建blog文件夹 npm init blog 检测是否可以，新建一个新的博客，然后执行g和s，打开浏览器访问4000端口查看。 hexo n “test“ &#x3D;&#x3D;&#x3D; hexo new ”test“ hexo g hexo s ctrl+c可以退出hexo服务器 四 推送博客 在blog文件下面找到config.yml配置及文件，修改最后的内容为（注意冒号之后有空格，不然会提示出错）： type: gitrepo: github下的仓库的完整路径branch: master 上述都成功后，可以在blog&#x2F;source&#x2F;__post下面创建md文件，写完之后可以通过 hexo g -d 或者hexo d推送 常用命令： hexo n “博客名” &#x3D;&#x3D;&#x3D; hexo new “博客名” hexo g &#x3D;&#x3D;&#x3D; hexo generate 生成静态页面至public目录 hexo s &#x3D;&#x3D;&#x3D; hexo server 开启预览访问端口（ctrl+c退出） hexo d &#x3D;&#x3D;&#x3D; hexo deploy 部署到github hexo s -g 生成并本地预览 hexo g -d 生成并上传 &#x3D;&#x3D;&#x3D; hexo d -g","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2022-04-06T13:45:39.129Z","updated":"2022-04-06T13:45:39.129Z","comments":true,"path":"2022/04/06/hello-world/","link":"","permalink":"http://example.com/2022/04/06/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://example.com/tags/hexo/"}]}